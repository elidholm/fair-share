---
services:
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=elidholm@fairshare.fun"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
  fairshare:
    image: ghcr.io/elidholm/fairshare:prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fairshare.rule=Host(`fairshare.fun`)"
      - "traefik.http.routers.fairshare.entrypoints=websecure"
      - "traefik.http.routers.fairshare.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "3000:3000"
    volumes:
      - .:/app  # Mounts the current directory into the container's /app for live updates
      - /app/node_modules  # Ensures node_modules is isolated inside the container
    deploy:
      mode: replicated
      replicas: 3
      endpoint_mode: vip

volumes:
  letsencrypt:
